plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group
minecraft {
}

repositories {
    maven { url = "http://maven.fabricmc.net/" }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        name = "NerdHubMC"
        url = "https://maven.abusedmaster.xyz/"
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://dl.bintray.com/ladysnake/libs"
    }
    maven {
        url "https://www.cursemaven.com"
    }
}

minecraft {
    accessWidener "src/main/resources/images.accesswidener"
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    modCompile ("curse.maven:hwyla-253449:3033613")  {
        exclude group: "net.fabricmc.fabric-api"
    }
    modCompile ("me.shedaniel.cloth:config-2:${project.cloth_config_version}")  {
        exclude group: "net.fabricmc.fabric-api"
    }
    modCompile ("io.github.prospector:modmenu:${project.mod_menu_version}")  {
        exclude group: "net.fabricmc.fabric-api"
    }
    modImplementation ("com.github.emilyploszaj:trinkets:${project.trinkets_version}")  {
        exclude group: "net.fabricmc.fabric-api"
    }

    include "com.github.emilyploszaj:trinkets:${project.trinkets_version}"

    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cc_version}"
    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cc_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cc_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cc_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"